name: EasyQuit Release

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like v1.0.0, v1.0.1, etc.

jobs:
  release:
    name: Build and Release
    runs-on: macos-26
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üè∑Ô∏è Extract version from tag
        run: |
          # Extract version from git tag (e.g., v1.0.0 -> 1.0.0)
          TAG_NAME=${GITHUB_REF#refs/tags/}
          APP_VERSION=${TAG_NAME#v}
          APP_BUILD=$(git rev-list --count HEAD)

          # Get previous tag for changelog
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${TAG_NAME}^ 2>/dev/null || echo "")

          echo "Tag: $TAG_NAME"
          echo "Version: $APP_VERSION"
          echo "Build: $APP_BUILD"
          echo "Previous tag: $PREVIOUS_TAG"

          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "APP_BUILD=$APP_BUILD" >> $GITHUB_ENV
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV

      - name: üîß Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode.app"

      - name: üõ†Ô∏è Build EasyQuit (Ad-hoc Signed)
        run: |
          xcodebuild \
            clean build \
            -project EasyQuit.xcodeproj/ \
            -scheme "EasyQuit" \
            -configuration Release \
            CODE_SIGN_IDENTITY="-" \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="" \
            MARKETING_VERSION=${{ env.APP_VERSION }} \
            CURRENT_PROJECT_VERSION=${{ env.APP_BUILD }}

      - name: üì¶ Copy app to dist folder
        run: |
          mkdir -p dist
          cp -R ~/Library/Developer/Xcode/DerivedData/*/Build/Products/Release/EasyQuit.app dist/

      - name: ü§è Compress EasyQuit
        run: |
          ditto -c -k --sequesterRsrc --keepParent "dist/EasyQuit.app" "dist/EasyQuit.zip"

      - name: üìä Calculate SHA256
        run: |
          SHA256=$(shasum -a 256 dist/EasyQuit.zip | awk '{print $1}')
          echo "SHA256: $SHA256"
          echo "SHA256=$SHA256" >> $GITHUB_ENV

      - name: ‚¨ÜÔ∏è Upload EasyQuit Artifact
        uses: actions/upload-artifact@v4
        with:
          name: EasyQuit-${{ env.TAG_NAME }}
          path: dist/EasyQuit.zip

      - name: üì∞ Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          outputFile: CHANGELOG.md
          fromTag: ${{ env.PREVIOUS_TAG }}
          toTag: ${{ env.TAG_NAME }}
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n## üí≠ Uncategorized\n#{{UNCATEGORIZED}}",
              "pr_template": "- #{{TITLE}} ##{{NUMBER}}",
              "categories": [
                {
                    "title": "## ‚ú® New Features",
                    "labels": ["Feature", "Enhancement", "Improvement"]
                },
                {
                    "title": "## üêû Bug Fixes",
                    "labels": ["Bug", "Fix"]
                },
                {
                    "title": "## üåê Localization",
                    "labels": ["Localization"]
                }
              ],
              "empty_template": "- Initial release"
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ü•≥ Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/EasyQuit.zip
          bodyFile: CHANGELOG.md
          name: "EasyQuit ${{ env.APP_VERSION }}"
          tag: ${{ env.TAG_NAME }}
          prerelease: false
          draft: false
          makeLatest: true

      - name: üìù Post-release info
        run: |
          echo "========================================"
          echo "‚úÖ Release published successfully!"
          echo "========================================"
          echo "Version: ${{ env.APP_VERSION }}"
          echo "Tag: ${{ env.TAG_NAME }}"
          echo "Build: ${{ env.APP_BUILD }}"
          echo "SHA256: ${{ env.SHA256 }}"
          echo "========================================"
          echo ""
          echo "‚ö†Ô∏è Note: This build uses ad-hoc signing (not notarized)"
          echo "Users will need to allow the app in System Preferences > Security & Privacy"
          echo ""
          echo "üç∫ Next steps for Homebrew:"
          echo "1. Update Cask file with this SHA256: ${{ env.SHA256 }}"
          echo "2. Users can install with: brew install cipher-shad0w/easyquit/easyquit"
          echo "========================================"

